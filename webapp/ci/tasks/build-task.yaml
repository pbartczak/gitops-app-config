---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build
  namespace: webapp-pipelines
spec:
  params:
    - name: buildRevision
    - name: appGitUrl
    - name: appImage
    - name: gitBaseImage
      default: docker.io/alpine/git:v2.26.2
    - name: buildahBaseImage
      default: registry.redhat.io/rhel8/buildah
  workspaces:
    - name: app-source
  stepTemplate:
    env:
      - name: HOME
        value: /tekton/home

  steps:
    - name: git-checkout
      image: "$(params.gitBaseImage)"
      workingDir: "$(workspaces.app-source.path)"
      script: |
        #!/usr/bin/env sh
        set -eu

        git init
        git remote add origin $(params.appGitUrl)
        git fetch --depth 1 origin $(params.buildRevision)
        git checkout FETCH_HEAD

    - name: build-image
      image: "$(params.buildahBaseImage)"
      workingDir: "$(workspaces.app-source.path)"
      command:
        - buildah
        - "--storage-driver=vfs"
        - bud
        - "--layers"
        - "-f"
        - "Containerfile"
        - "-t"
        - "$(params.appImage):$(params.buildRevision)"
        - "."
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers

    - name: build-push
      image: "$(params.buildahBaseImage)"
      command:
        - buildah
        - "--storage-driver=vfs"
        - push
        - "$(params.appImage):$(params.buildRevision)"
        - "docker://$(params.appImage):$(params.buildRevision)"
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers

  volumes:
    - name: varlibcontainers
      emptyDir: {}
